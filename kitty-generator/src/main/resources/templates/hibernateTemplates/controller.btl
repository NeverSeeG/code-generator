package ${table.controllerPackageName};

import java.util.List;
import javax.annotation.Resource;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;

import ${table.modelPackageName}.${table.className};
import ${table.servicePackageName}.${table.className}Manager;

/**
 * ${table.description} (${table.className}Controller)
 * 作者：  generate
 * 时间：  ${strutil.formatDate(date(),'yyyy-MM-dd HH:mm:ss')}
 * 说明：  ${table.className}Controller
 */
@RestController
@RequestMapping("${table.objectName}")
public class ${table.className}Controller extends BaseController{

	@Resource
	private ${table.className}Manager manager;

	/**
     * 按指定id的查询菜单信息
     *
     * @param id
     *            菜单主键
     * @return
     */
    @GetMapping("/get/{id}" )
    public ${table.className} get(@PathVariable() String id){
    return manager.get(id);
    }

    /**
     * 修改或新增
     *
     * @param id
     *            可选 需要修改的记录ID
     * @return
     */
    @PostMapping("/save")
    public ${table.className}  save(String id) {
        // 提交VO
        ${table.className} vo = new ${table.className}();
        if (id != null) { // 从数据库读取记录
            vo = manager.get(id);
        }
        bind( vo);
        manager.save(vo);
        return vo;
    }

    /**
     * 删除记录 单条
     */
    @PostMapping("/delete/{id}")
    public boolean delete(@PathVariable() String id) {
        manager.remove(id);
        return true;
    }

    /**
    * 默认动态查询（分页）
    */
    @PostMapping("/pagelist" )
    public Page<${table.className}> pagelist( @RequestParam(required = false, defaultValue = "1") int page, // 页码
            @RequestParam(required = false, defaultValue = "20") int rows, // 每页显示记录
            @RequestParam(required = false, defaultValue = "id") String sort, // 排序字段
            @RequestParam(required = false, defaultValue = "asc") String order // 排序编码
    ) {
        Sort st =  Sort.by("asc".equalsIgnoreCase(order) ? Sort.Direction.ASC : Sort.Direction.DESC, sort);
        Pageable pageable = PageRequest.of(page - 1, rows, st);
        QueryFilter qf = QueryFilter.from(request.getParameterMap());
        return manager.findAll(qf, pageable);
    }

    /**
     * 默认动态查询（不分页）
     */
    @GetMapping("/list")
    public Page<${table.className}> list(PageParam page) {
        QueryFilter qf = QueryFilter.from(request.getParameterMap());
        return manager.findAll(qf, page.build());
    }
}
